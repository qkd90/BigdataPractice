package com.data.data.hmly.service.entity;

// default package
// Generated 2015-10-14 17:07:39 by Hibernate Tools 4.0.0

import com.data.data.hmly.enums.ThirdPartyUserType;
import com.framework.hibernate.annotation.RegFilter;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import java.text.DecimalFormat;
import java.util.Date;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user")
@Inheritance(strategy = InheritanceType.JOINED)
@RegFilter
public class User extends com.framework.hibernate.util.Entity {

	/**
	 *
	 */
	private static final long	serialVersionUID	= 3453312089240024934L;
	@Id
	@GeneratedValue
	protected Long				id;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_time")
	protected Date				createdTime;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_time")
	protected Date				updateTime;
	protected String			account;
	protected String			password;
	@Column(name = "user_name")
	protected String			userName;
	protected String			mobile;
	protected String			email;
	protected String			address;
	@Enumerated(EnumType.STRING)
	protected UserType			userType;
	protected String			qqNo;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parentId")
	protected User              parent;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "grandId")
	protected User              grand;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "superiorId")
	protected User              superior;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "siteid")
	private SysSite             sysSite; // 所属组织部门
	@Column(name = "status")
	@Enumerated(EnumType.STRING)
	protected UserStatus        status;
//    @OneToOne(mappedBy = "user", fetch = FetchType.LAZY)
//    private UserExinfo userExinfo;

	private Double balance;
	private Double frozenBalance;
	private String payPassword;
	private String bankNo;
	protected String			unionId; // 只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段。
	@Enumerated(EnumType.STRING)
	@Column(name = "thirdPartyUserType")
	private ThirdPartyUserType thirdPartyUserType;
	@Column(name = "loginStatistic")
	protected Integer				loginStatistic;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastLoginTime")
	protected Date				lastLoginTime;

	@Transient
	private Integer oneLevelCount;
	@Transient
	private Integer twoLevelCount;
	@Transient
	private Integer threeLevelCount;
    @Transient
    private Integer totalLevelCount;
    @Transient
	private String nickName;
    @Transient
	private String headImgUrl;
	@Transient
	private String currLoginOpenId;	// 当前登录用户的openId
    
	public User() {
	}

	public User(Long id, String nickName, String headImgUrl) {
		this.id = id;
		this.nickName = nickName;
		this.headImgUrl = headImgUrl;
	}


	public Double getBalance() {
		return balance;
	}

	public void setBalance(Double balance) {
		this.balance = balance;
	}

    /**
     * 格式化金额输出，防止Double转String时出现科学计数法字符串
     * @return
     */
	public String getBalanceStr() {
        if (balance == null) {
            return "0.00";
        }
		DecimalFormat decimalFormat = new DecimalFormat("#,##0.00");
		return decimalFormat.format(balance);
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}
	@RegFilter
	public String getAccount() {
		return account;
	}

	public void setAccount(String account) {
		this.account = account;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}
	@RegFilter
	public String getUserName() {
		return userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}
	@RegFilter
	public String getMobile() {
		return mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}
	@RegFilter
	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}
	@RegFilter
	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public static long getSerialversionuid() {
		return serialVersionUID;
	}

	public UserType getUserType() {
		return userType;
	}

	public void setUserType(UserType userType) {
		this.userType = userType;
	}

	public Date getCreatedTime() {
		return createdTime;
	}

	public void setCreatedTime(Date createdTime) {
		this.createdTime = createdTime;
	}

	public Date getUpdateTime() {
		return updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}
	@RegFilter
	public String getQqNo() {
		return qqNo;
	}

	public void setQqNo(String qqNo) {
		this.qqNo = qqNo;
	}

	public User getParent() {
		return parent;
	}

	public void setParent(User parent) {
		this.parent = parent;
	}

	public User getGrand() {
		return grand;
	}

	public void setGrand(User grand) {
		this.grand = grand;
	}

	public User getSuperior() {
		return superior;
	}

	public void setSuperior(User superior) {
		this.superior = superior;
	}

	public SysSite getSysSite() {
		return sysSite;
	}

	public void setSysSite(SysSite sysSite) {
		this.sysSite = sysSite;
	}

	public UserStatus getStatus() {
		return status;
	}

	public void setStatus(UserStatus status) {
		this.status = status;
	}


	public Integer getOneLevelCount() {
		return oneLevelCount;
	}

	public void setOneLevelCount(Integer oneLevelCount) {
		this.oneLevelCount = oneLevelCount;
	}

	public Integer getTwoLevelCount() {
		return twoLevelCount;
	}

	public void setTwoLevelCount(Integer twoLevelCount) {
		this.twoLevelCount = twoLevelCount;
	}

	public Integer getThreeLevelCount() {
		return threeLevelCount;
	}

	public void setThreeLevelCount(Integer threeLevelCount) {
		this.threeLevelCount = threeLevelCount;
	}

    public Integer getTotalLevelCount() {
        return totalLevelCount;
    }

    public void setTotalLevelCount(Integer totalLevelCount) {
        this.totalLevelCount = totalLevelCount;
    }
	@RegFilter
	public String getNickName() {
		return nickName;
	}

	public void setNickName(String nickName) {
		this.nickName = nickName;
	}

	public String getHeadImgUrl() {
		return headImgUrl;
	}

	public void setHeadImgUrl(String headImgUrl) {
		this.headImgUrl = headImgUrl;
	}

//    public UserExinfo getUserExinfo() {
//        return userExinfo;
//    }
//
//    public void setUserExinfo(UserExinfo userExinfo) {
//        this.userExinfo = userExinfo;
//    }


	public void setUnionId(String unionId) {
		this.unionId = unionId;
	}

	public String getUnionId() {
		return unionId;
	}

    public String getCurrLoginOpenId() {
        return currLoginOpenId;
    }

    public void setCurrLoginOpenId(String currLoginOpenId) {
        this.currLoginOpenId = currLoginOpenId;
    }

	public Double getFrozenBalance() {
		return frozenBalance;
	}

	public void setFrozenBalance(Double frozenBalance) {
		this.frozenBalance = frozenBalance;
	}

	public ThirdPartyUserType getThirdPartyUserType() {
		return thirdPartyUserType;
	}

	public void setThirdPartyUserType(ThirdPartyUserType thirdPartyUserType) {
		this.thirdPartyUserType = thirdPartyUserType;
	}

	public Integer getLoginStatistic() {
		return loginStatistic;
	}

	public void setLoginStatistic(Integer loginStatistic) {
		this.loginStatistic = loginStatistic;
	}

	public Date getLastLoginTime() {
		return lastLoginTime;
	}

	public void setLastLoginTime(Date lastLoginTime) {
		this.lastLoginTime = lastLoginTime;
	}

	public String getPayPassword() {
		return payPassword;
	}

	public void setPayPassword(String payPassword) {
		this.payPassword = payPassword;
	}

	public String getBankNo() {
		return bankNo;
	}

	public void setBankNo(String bankNo) {
		this.bankNo = bankNo;
	}

	/**
	 * 记录登录信息
	 */
	public void loginInfo() {
		if (this.loginStatistic == null) {
			this.loginStatistic = 1;
		} else {
			this.loginStatistic = this.loginStatistic + 1;
		}
		this.lastLoginTime = new Date();
	}
}
