<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hmlyinfo.app.soutu.scenic.mapper.TopicScenicMapper">
	<insert id="insert" parameterType="TopicScenic">
		insert into tb_topic_scenic
			(
				id,
				topic_id,
				scenic_id,
				recommend_reason,
				modify_time,
				create_time,
				id,
				topic_id,
				scenic_id,
				recommend_reason,
				modify_time,
				create_time
			)
		values
			(
				#{id},
				#{topicId},
				#{scenicIds},
				#{recommendReason},
				#{modifyTime},
				#{createTime},
				#{id},
				#{topicId},
				#{scenicIds},
				#{recommendReason},
				#{modifyTime},
				#{createTime}
			)	
	</insert>
	
	<update id="update" parameterType="TopicScenic">
		update tb_topic_scenic
		<set>
			<if test="id != null and '' != id"> id = #{id},</if>
			<if test="topicId != null and '' != topicId"> topic_id = #{topicId},</if>
			<if test="scenicIds != null and '' != scenicIds"> scenic_id = #{scenicIds},</if>
			<if test="recommendReason != null and '' != recommendReason"> recommend_reason = #{recommendReason},</if>
			<if test="modifyTime != null and '' != modifyTime"> modify_time = #{modifyTime},</if>
			<if test="createTime != null and '' != createTime"> create_time = #{createTime},</if>
			<if test="id != null and '' != id"> id = #{id},</if>
			<if test="topicId != null and '' != topicId"> topic_id = #{topicId},</if>
			<if test="scenicIds != null and '' != scenicIds"> scenic_id = #{scenicIds},</if>
			<if test="recommendReason != null and '' != recommendReason"> recommend_reason = #{recommendReason},</if>
			<if test="modifyTime != null and '' != modifyTime"> modify_time = #{modifyTime},</if>
			<if test="createTime != null and '' != createTime"> create_time = #{createTime},</if>
		</set>
		where
			id = #{id}
			id = #{id}
	</update>
	
	<delete id="del" parameterType="TopicScenic">
		delete from
			tb_topic_scenic
		where
			id = #{id}
			id = #{id}
	</delete>
	
	<select id="selById" resultType="TopicScenic">
		select
			*
		from
			tb_topic_scenic
		where
			id = #{id}
			id = #{id}
	</select>
	
	<select id="count" resultType="int">
		select 
			count(t.*) 
		<include refid="byProperty"/>
	</select>
	
	<select id="list" resultType="TopicScenic">
		select 
			 t.*
		<if test="longitude!=null and longitude!=''">,
        ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{latitude}*PI()/180-i.latitude*PI()/180)/2),2)+COS(#{latitude}*PI()/180)*COS(i.latitude*PI()/180)*POW(SIN((#{longitude}*PI()/180-i.longitude*PI()/180)/2),2)))*1000) as distance
        </if>
		<include refid="byProperty"/>
	</select>
	
	<sql id="byProperty">
		from
			tb_topic_scenic as t left join tb_scenic_info as i on t.scenic_id = i.id
		<where>
			<if test="id != null and '' != id"> and id = #{id} </if>
			<if test="topicId != null and '' != topicId"> and topic_id = #{topicId} </if>
			<if test="scenicIds != null and '' != scenicIds"> and scenic_id = #{scenicIds} </if>
			<if test="recommendReason != null and '' != recommendReason"> and recommend_reason = #{recommendReason} </if>
			<if test="modifyTime != null and '' != modifyTime"> and modify_time = #{modifyTime} </if>
			<if test="createTime != null and '' != createTime"> and create_time = #{createTime} </if>
			<if test="id != null and '' != id"> and id = #{id} </if>
			<if test="topicId != null and '' != topicId"> and topic_id = #{topicId} </if>
			<if test="scenicIds != null and '' != scenicIds"> and scenic_id = #{scenicIds} </if>
			<if test="recommendReason != null and '' != recommendReason"> and recommend_reason = #{recommendReason} </if>
			<if test="modifyTime != null and '' != modifyTime"> and modify_time = #{modifyTime} </if>
			<if test="createTime != null and '' != createTime"> and create_time = #{createTime} </if>
			<if test="ids != null">
				and id in (
				<if test="ids.size() == 0">-1000</if>
				<foreach collection="ids" item="item" index="index" separator=",">#{item}
				</foreach>
				)
			</if>
			<if test="longitude!=null and longitude!='' and distance != null and '' != distance">
                and ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{latitude}*PI()/180-i.latitude*PI()/180)/2),2)+COS(#{latitude}*PI()/180)*COS(i.latitude*PI()/180)*POW(SIN((#{longitude}*PI()/180-i.longitude*PI()/180)/2),2)))*1000) &lt; #{distance}
            </if>
		</where>
	</sql>
</mapper>