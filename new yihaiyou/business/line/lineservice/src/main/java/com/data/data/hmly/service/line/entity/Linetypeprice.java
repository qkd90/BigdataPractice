package com.data.data.hmly.service.line.entity;

// Generated 2015-10-19 21:17:00 by Hibernate Tools 4.0.0

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import java.util.Date;
import java.util.Set;

/**
 * Linetypeprice generated by hbm2java
 */
@Entity
@Table(name = "linetypeprice")
public class Linetypeprice extends com.framework.hibernate.util.Entity implements java.io.Serializable, Cloneable {

	private static final long serialVersionUID = 1926414046477823776L;
	private Long	id;
	private Line	line;
	private String	quoteName;
	private String	quoteNoContainDesc;
	private String	quoteContainDesc;

	private String	quoteDesc;
	private Float	marketPrice;
	private Float   price;
	private Float   childPrice;
	private Float	childMarketPrice;
	private Long	userId;
	private Date	createTime;
	private String	status;
	private Set<Linetypepricedate> linetypepricedate;
	private String	quoteOwn;

	public Linetypeprice() {
	}

	public Linetypeprice(Long id) {
		this.id = id;
	}

	@Id
	@GeneratedValue
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}
	
	@ManyToOne
	@JoinColumn(name = "lineId")
	public Line getLine() {
		return line;
	}

	public void setLine(Line line) {
		this.line = line;
	}

	@Column(name = "quoteName", length = 50)
	public String getQuoteName() {
		return quoteName;
	}

	public void setQuoteName(String quoteName) {
		this.quoteName = quoteName;
	}

	@Column(name = "quoteNoContainDesc")
	public String getQuoteNoContainDesc() {
		return quoteNoContainDesc;
	}

	public void setQuoteNoContainDesc(String quoteNoContainDesc) {
		this.quoteNoContainDesc = quoteNoContainDesc;
	}

	@Column(name = "quoteContainDesc")
	public String getQuoteContainDesc() {
		return quoteContainDesc;
	}

	public void setQuoteContainDesc(String quoteContainDesc) {
		this.quoteContainDesc = quoteContainDesc;
	}

	@Column(name = "marketPrice", precision = 20)
	public Float getMarketPrice() {
		return marketPrice;
	}

	public void setMarketPrice(Float marketPrice) {
		this.marketPrice = marketPrice;
	}

	@Column(name = "userId")
	public Long getUserId() {
		return userId;
	}

	public void setUserId(Long userId) {
		this.userId = userId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createTime", length = 19)
	public Date getCreateTime() {
		return createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Column(name = "status", length = 7)
	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@OneToMany(mappedBy = "linetypeprice")
	public Set<Linetypepricedate> getLinetypepricedate() {
		return linetypepricedate;
	}

	public void setLinetypepricedate(Set<Linetypepricedate> linetypepricedate) {
		this.linetypepricedate = linetypepricedate;
	}
	@Column(name = "quoteDesc")
	public String getQuoteDesc() {
		return quoteDesc;
	}

	public void setQuoteDesc(String quoteDesc) {
		this.quoteDesc = quoteDesc;
	}

	@Override
	public Linetypeprice clone() throws CloneNotSupportedException {
		return (Linetypeprice) super.clone();
	}


	@Column(name = "quoteOwn")
	public String getQuoteOwn() {
		return quoteOwn;
	}

	public void setQuoteOwn(String quoteOwn) {
		this.quoteOwn = quoteOwn;
	}
	@Column(name = "childMarketPrice")
	public Float getChildMarketPrice() {
		return childMarketPrice;
	}

	public void setChildMarketPrice(Float childMarketPrice) {
		this.childMarketPrice = childMarketPrice;
	}
	@Column(name = "price")
	public Float getPrice() {
		return price;
	}

	public void setPrice(Float price) {
		this.price = price;
	}
	@Column(name = "childPrice")
	public Float getChildPrice() {
		return childPrice;
	}

	public void setChildPrice(Float childPrice) {
		this.childPrice = childPrice;
	}
}
