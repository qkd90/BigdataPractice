<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
   http://www.springframework.org/schema/aop 
   http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
   http://www.springframework.org/schema/jee
   http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-4.0.xsd">



	<description>Spring公共配置文件 </description>
	<context:annotation-config />
	<!-- 使用 Annotation 自动注入bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan
		base-package="com.spark.service,com.zuipin,com.framework,com.pay,com.zuipin.bigdata.data.service,com.zuipin.bigdata.data.service.dao" />
	<bean class="com.zuipin.util.SpringContextHolder"></bean>
	<!-- 定义受环境影响易变的变量 -->
	<bean id="propertiesManager" class="com.zuipin.util.PropertiesManager">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:/deploy.properties</value>
				<value>classpath*:/config.properties</value>
				<value>classpath*:/redis.properties</value>
				<!-- <value>classpath*:/hadoop.properties</value> <value>classpath*:/hbase.properties</value> 
					<value>classpath*:/hive.properties</value> -->
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${database.driver}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.user}" />
		<property name="password" value="${database.password}" />
		<property name="maxWait" value="${database.maxWait}" />
		<property name="maxActive" value="${database.maxActive}" />
		<property name="maxIdle" value="${database.maxIdle}" />
		<property name="testWhileIdle" value="${database.testWhileIdle}" />
		<property name="validationQuery" value="${database.validationQuery}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.autoReconnect">${hibernate.autoReconnect}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.zuipin.entity</value>
				<value>com.zuipin.service.entity</value>
			</list>
		</property>
	</bean>

	<!-- <bean id="spsessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"> 
		<property name="dataSource" ref="spdataSource" /> <property name="hibernateProperties"> 
		<props> <prop key="hibernate.dialect">${sphibernate.dialect}</prop> <prop 
		key="hibernate.show_sql">${hibernate.show_sql}</prop> <prop key="hibernate.autoReconnect">${hibernate.autoReconnect}</prop> 
		<prop key="hibernate.format_sql">${hibernate.format_sql}</prop> <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop> 
		<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop> 
		</props> </property> <property name="packagesToScan"> <list> <value>com.zuipin.spentity</value> 
		</list> </property> </bean> -->

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<!-- 配置事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="do*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="mod*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="edit*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="batch*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="search*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="count*" read-only="true" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* com.zuipin.service.*.*(..))"
			advice-ref="txAdvice" />
		<aop:advisor pointcut="execution(* com.zuipin.ftl.*.*(..))"
			advice-ref="txAdvice" />
		<aop:advisor pointcut="execution(* com.pay.service.*.*(..))"
			advice-ref="txAdvice" />
		<aop:advisor pointcut="execution(* com.pay.service.*.*(..))"
			advice-ref="txAdvice" />
	</aop:config>


	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxTotal" value="${redis.maxTotal}"></property>  
        <property name="maxIdle" value="${redis.maxIdle}" />   
        <property name="maxWaitMillis" value="${redis.maxWait}" />  
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
    </bean>  
	
	<bean id="jedisConnFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}"></property>
		<property name="port" value="${redis.port}"></property>
		<property name="poolConfig" ref="poolConfig"></property>
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
	    <property name="connectionFactory">
	        <ref bean="jedisConnFactory"/>
	    </property>
	</bean> -->


	<!-- <import resource="applicationContext-hbase.xml" />
	<import resource="applicationContext-init.xml" />
	<import resource="applicationContext-hivecontext.xml" />
	<import resource="applicationContext-memcache.xml" />
	<import resource="applicationContext-quartz.xml" /> -->



</beans>