<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hmlyinfo.app.soutu.delicacy.mapper.RestaurantMapper">
	<insert id="insert" parameterType="Restaurant">
		insert into tb_restaurant
			(
				id,
				dianping_id,
				res_name,
				price,
				res_price,
				res_address,
				res_phone,
				res_feature,
				res_picture,
				res_longitude,
				res_latitude,
				gcj_lng,
				gcj_lat,
				city_code,
				score,
                shop_hours,
				hot_num,
				res_comment,
				dianping_comment,
				modify_time,
				create_time
			)
		values
			(
				#{id},
				#{dianpingId},
				#{resName},
				#{price},
				#{resPrice},
				#{resAddress},
				#{resPhone},
				#{resFeature},
				#{resPicture},
				#{resLongitude},
				#{resLatitude},
				#{gcjLng},
				#{gcjLat},
				#{cityCode},
				#{score},
                #{shopHours},
				#{hotNum},
				#{resComment},
				#{dianpingComment},
				#{modifyTime},
				#{createTime}
			)	
	</insert>
	
	<update id="update" parameterType="Restaurant">
		update tb_restaurant
		<set>
			<if test="id != null and '' != id"> id = #{id},</if>
			<if test="dianpingId != null and '' != dianpingId"> dianping_id = #{dianpingId},</if>
			<if test="resName != null and '' != resName"> res_name = #{resName},</if>
			<if test="price != null and '' != price"> price = #{price},</if>
			<if test="resPrice != null and '' != resPrice"> res_price = #{resPrice},</if>
			<if test="resAddress != null and '' != resAddress"> res_address = #{resAddress},</if>
			<if test="resPhone != null and '' != resPhone"> res_phone = #{resPhone},</if>
			<if test="resFeature != null and '' != resFeature"> res_feature = #{resFeature},</if>
			<if test="resPicture != null and '' != resPicture"> res_picture = #{resPicture},</if>
			<if test="resLongitude != null and '' != resLongitude"> res_longitude = #{resLongitude},</if>
			<if test="resLatitude != null and '' != resLatitude"> res_latitude = #{resLatitude},</if>
			<if test="gcjLng != null and '' != gcjLng"> gcj_lng = #{gcjLng},</if>
			<if test="gcjLat != null and '' != gcjLat"> gcj_lat = #{gcjLat},</if>
			<if test="cityCode != null and '' != cityCode"> city_code = #{cityCode},</if>
			<if test="score != null and '' != score"> score = #{score},</if>
			<if test="shopHours != null and '' != shopHours"> shop_hours = #{shopHours},</if>
			<if test="hotNum != null and '' != hotNum"> hot_num = #{hotNum},</if>
			<if test="resComment != null and '' != resComment"> res_comment = #{resComment},</if>
			<if test="dianpingComment != null and '' != dianpingComment"> dianping_comment = #{dianpingComment},</if>
			<if test="modifyTime != null and '' != modifyTime"> modify_time = #{modifyTime},</if>
			<if test="createTime != null and '' != createTime"> create_time = #{createTime},</if>
		</set>
		where
			id = #{id}
	</update>
	
	<delete id="del" parameterType="Restaurant">
		delete from
			tb_restaurant
		where
			id = #{id}
	</delete>
	
	<select id="selById" resultType="Restaurant">
		select
			*
		from
			tb_restaurant
		where
			id = #{id}
	</select>
	
	<select id="count" resultType="int">
		select 
			count(*) 
		<include refid="byProperty"/>
	</select>
	
	<select id="list" resultType="Restaurant">
		select 
			 	rest.id,
				res_name,
				price,
				res_price,
				res_address,
				res_phone,
				res_feature,
				res_picture,
				res_longitude,
				res_latitude,
				gcj_lng,
				gcj_lat,
				city_code,
				score,
                shop_hours,
				hot_num,
				res_comment,
				dianping_comment
        <if test="longitude!=null and longitude!=''">,
        ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{latitude}*PI()/180-res_latitude*PI()/180)/2),2)+COS(#{latitude}*PI()/180)*COS(res_latitude*PI()/180)*POW(SIN((#{longitude}*PI()/180-res_longitude*PI()/180)/2),2)))*1000) as distance
        </if>
        <if test="gcjLng!=null and gcjLng!=''">,
        ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{gcjLat}*PI()/180-gcj_lat*PI()/180)/2),2)+COS(#{gcjLat}*PI()/180)*COS(gcj_lat*PI()/180)*POW(SIN((#{gcjLng}*PI()/180-gcj_lng*PI()/180)/2),2)))*1000) as distance
        </if>
        <include refid="byProperty"/>
	</select>
	
	<sql id="byProperty">
		from
			tb_restaurant rest left join tb_delicacy_res delicacyRes  on delicacyRes.res_id = rest.id 
		<where>
			<if test="id != null and '' != id"> and rest.id = #{id} </if>
			<if test="dianpingId != null and '' != dianpingId"> dianping_id = #{dianpingId} </if>
			<if test="delicacyIds != null and '' != delicacyIds"> and delicacy_id = #{delicacyIds} </if>
			<if test="resName != null and '' != resName"> and res_name like "%"#{resName}"%" </if>
			<if test="price != null and '' != price"> and price = #{price} </if>
			<if test="resPrice != null and '' != resPrice"> and res_price = #{resPrice} </if>
			<if test="resAddress != null and '' != resAddress"> and res_address = #{resAddress} </if>
			<if test="resPhone != null and '' != resPhone"> and res_phone = #{resPhone} </if>
			<if test="resFeature != null and '' != resFeature"> and res_feature = #{resFeature} </if>
			<if test="resPicture != null and '' != resPicture"> and res_picture = #{resPicture} </if>
			<if test="cityCode != null and '' != cityCode"> and city_code = #{cityCode} </if>
			<if test="score != null and '' != score"> and score = #{score} </if>
			<if test="shopHours != null and '' != shopHours"> and shop_hours = #{shopHours} </if>
			<if test="hotNum != null and '' != hotNum"> and hot_num = #{hotNum} </if>
			<if test="resComment != null and '' != resComment"> and res_comment = #{resComment} </if>
			<if test="dianpingComment != null and '' != dianpingComment"> dianping_comment = #{dianpingComment} </if>
			<if test="modifyTime != null and '' != modifyTime"> and modify_time = #{modifyTime} </if>
			<if test="createTime != null and '' != createTime"> and create_time = #{createTime} </if>
            <if test="distance != null and '' != distance">
            	<if test="longitude!=null and longitude!=''">
        			and ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{latitude}*PI()/180-res_latitude*PI()/180)/2),2)+COS(#{latitude}*PI()/180)*COS(res_latitude*PI()/180)*POW(SIN((#{longitude}*PI()/180-res_longitude*PI()/180)/2),2)))*1000) &lt; #{distance}
        		</if>
        		<if test="gcjLng!=null and gcjLng!=''">
        			and ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{gcjLat}*PI()/180-gcj_lat*PI()/180)/2),2)+COS(#{gcjLat}*PI()/180)*COS(gcj_lat*PI()/180)*POW(SIN((#{gcjLng}*PI()/180-gcj_lng*PI()/180)/2),2)))*1000) &lt; #{distance}
        		</if>
            </if>
            <if test="ids != null">
                rest.id in (<if test="ids.size() == 0">-1</if>
                <foreach item="item" index="index" collection="ids"
                         separator=",">
                    #{item}
                </foreach>)
            </if>
		</where>
		<choose>
			<when test="orderColumn != null and '' != orderColumn">
						ORDER BY ${orderColumn}
					<if test="orderType != null and '' != orderType">
						${orderType}
					</if>
                <if test="longitude!=null and longitude!=''">
                    ,ISNULL(ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{latitude}*PI()/180-res_latitude*PI()/180)/2),2)+COS(#{latitude}*PI()/180)*COS(res_latitude*PI()/180)*POW(SIN((#{longitude}*PI()/180-res_longitude*PI()/180)/2),2)))*1000)),
                    ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{latitude}*PI()/180-res_latitude*PI()/180)/2),2)+COS(#{latitude}*PI()/180)*COS(res_latitude*PI()/180)*POW(SIN((#{longitude}*PI()/180-res_longitude*PI()/180)/2),2)))*1000)
                </if>
                <if test="gcjLng!=null and gcjLng!=''">
                    ,ISNULL(ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{gcjLat}*PI()/180-gcj_lat*PI()/180)/2),2)+COS(#{gcjLat}*PI()/180)*COS(gcj_lat*PI()/180)*POW(SIN((#{gcjLng}*PI()/180-gcj_lng*PI()/180)/2),2)))*1000)),
                    ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{gcjLat}*PI()/180-gcj_lat*PI()/180)/2),2)+COS(#{gcjLat}*PI()/180)*COS(gcj_lat*PI()/180)*POW(SIN((#{gcjLng}*PI()/180-gcj_lng*PI()/180)/2),2)))*1000)
                </if>
			</when>
            <when test="longitude!=null and longitude!=''">
                order by ISNULL(ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{latitude}*PI()/180-res_latitude*PI()/180)/2),2)+COS(#{latitude}*PI()/180)*COS(res_latitude*PI()/180)*POW(SIN((#{longitude}*PI()/180-res_longitude*PI()/180)/2),2)))*1000)),
                ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{latitude}*PI()/180-res_latitude*PI()/180)/2),2)+COS(#{latitude}*PI()/180)*COS(res_latitude*PI()/180)*POW(SIN((#{longitude}*PI()/180-res_longitude*PI()/180)/2),2)))*1000)
            </when>
            <when test="gcjLng!=null and gcjLng!=''">
                order by
        		ISNULL(ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{gcjLat}*PI()/180-gcj_lat*PI()/180)/2),2)+COS(#{gcjLat}*PI()/180)*COS(gcj_lat*PI()/180)*POW(SIN((#{gcjLng}*PI()/180-gcj_lng*PI()/180)/2),2)))*1000)),
        		ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{gcjLat}*PI()/180-gcj_lat*PI()/180)/2),2)+COS(#{gcjLat}*PI()/180)*COS(gcj_lat*PI()/180)*POW(SIN((#{gcjLng}*PI()/180-gcj_lng*PI()/180)/2),2)))*1000)
        	</when>
		</choose>
	</sql>
	<select id="listColumns" resultType="Restaurant">
		select
		<if test="needColumns != null and needColumns.size() != 0">
			<foreach collection="needColumns" item="item" index="index" separator=",">${item}
			</foreach>
		</if>
		<if test="distance != null and '' != distance"> ,
			<if test="longitude!=null and longitude!=''">
        		ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{latitude}*PI()/180-res_latitude*PI()/180)/2),2)+COS(#{latitude}*PI()/180)*COS(res_latitude*PI()/180)*POW(SIN((#{longitude}*PI()/180-res_longitude*PI()/180)/2),2)))*1000) as distance
        	</if>
        	<if test="gcjLng!=null and gcjLng!=''">
       			ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{gcjLat}*PI()/180-gcj_lat*PI()/180)/2),2)+COS(#{gcjLat}*PI()/180)*COS(gcj_lat*PI()/180)*POW(SIN((#{gcjLng}*PI()/180-gcj_lng*PI()/180)/2),2)))*1000) as distance
        	</if>
        	
		</if>
		from
			tb_restaurant rest
		<where>
			<if test="id != null and '' != id"> and rest.id = #{id} </if>
			<if test="dianpingId != null and '' != dianpingId"> dianping_id = #{dianpingId} </if>
			<if test="delicacyIds != null and '' != delicacyIds"> and delicacy_id = #{delicacyIds} </if>
			<if test="resName != null and '' != resName"> and res_name like "%"#{resName}"%" </if>
			<if test="price != null and '' != price"> and price = #{price} </if>
			<if test="resPrice != null and '' != resPrice"> and res_price = #{resPrice} </if>
			<if test="resAddress != null and '' != resAddress"> and res_address = #{resAddress} </if>
			<if test="resPhone != null and '' != resPhone"> and res_phone = #{resPhone} </if>
			<if test="resFeature != null and '' != resFeature"> and res_feature = #{resFeature} </if>
			<if test="resPicture != null and '' != resPicture"> and res_picture = #{resPicture} </if>
			<if test="cityCode != null and '' != cityCode"> and city_code = #{cityCode} </if>
			<if test="score != null and '' != score"> and score = #{score} </if>
			<if test="shopHours != null and '' != shopHours"> and shop_hours = #{shopHours} </if>
			<if test="hotNum != null and '' != hotNum"> and hot_num = #{hotNum} </if>
			<if test="resComment != null and '' != resComment"> and res_comment = #{resComment} </if>
			<if test="modifyTime != null and '' != modifyTime"> and modify_time = #{modifyTime} </if>
			<if test="createTime != null and '' != createTime"> and create_time = #{createTime} </if>
			<if test="dianpingComment != null and '' != dianpingComment"> dianping_comment = #{dianpingComment} </if>
            <if test="distance != null and '' != distance">
            	<if test="longitude!=null and longitude!=''">
        			and ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{latitude}*PI()/180-res_latitude*PI()/180)/2),2)+COS(#{latitude}*PI()/180)*COS(res_latitude*PI()/180)*POW(SIN((#{longitude}*PI()/180-res_longitude*PI()/180)/2),2)))*1000) &lt; #{distance}
        		</if>
        		<if test="gcjLng!=null and gcjLng!=''">
        			and ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{gcjLat}*PI()/180-gcj_lat*PI()/180)/2),2)+COS(#{gcjLat}*PI()/180)*COS(gcj_lat*PI()/180)*POW(SIN((#{gcjLng}*PI()/180-gcj_lng*PI()/180)/2),2)))*1000) &lt; #{distance}
        		</if>
                
            </if>
            <if test="ids != null">
                rest.id in (<if test="ids.size() == 0">-1</if>
                <foreach item="item" index="index" collection="ids"
                         separator=",">
                    #{item}
                </foreach>)
            </if>
		</where>
		<choose>
			<when test="orderColumn != null and '' != orderColumn">
						ORDER BY ${orderColumn}
					<if test="orderType != null and '' != orderType">
						${orderType}
					</if>
                <if test="longitude!=null and longitude!=''">
                    ,ISNULL(ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{latitude}*PI()/180-res_latitude*PI()/180)/2),2)+COS(#{latitude}*PI()/180)*COS(res_latitude*PI()/180)*POW(SIN((#{longitude}*PI()/180-res_longitude*PI()/180)/2),2)))*1000)),
                    ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{latitude}*PI()/180-res_latitude*PI()/180)/2),2)+COS(#{latitude}*PI()/180)*COS(res_latitude*PI()/180)*POW(SIN((#{longitude}*PI()/180-res_longitude*PI()/180)/2),2)))*1000)
                </if>
                <if test="gcjLng!=null and gcjLng!=''">
                    	,ISNULL(ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{gcjLat}*PI()/180-gcj_lat*PI()/180)/2),2)+COS(#{gcjLat}*PI()/180)*COS(gcj_lat*PI()/180)*POW(SIN((#{gcjLng}*PI()/180-gcj_lng*PI()/180)/2),2)))*1000)),
                    	ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{gcjLat}*PI()/180-gcj_lat*PI()/180)/2),2)+COS(#{gcjLat}*PI()/180)*COS(gcj_lat*PI()/180)*POW(SIN((#{gcjLng}*PI()/180-gcj_lng*PI()/180)/2),2)))*1000)
                </if>
			</when>
            <when test="longitude!=null and longitude!=''">
                order by ISNULL(ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{latitude}*PI()/180-res_latitude*PI()/180)/2),2)+COS(#{latitude}*PI()/180)*COS(res_latitude*PI()/180)*POW(SIN((#{longitude}*PI()/180-res_longitude*PI()/180)/2),2)))*1000)),
                ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{latitude}*PI()/180-res_latitude*PI()/180)/2),2)+COS(#{latitude}*PI()/180)*COS(res_latitude*PI()/180)*POW(SIN((#{longitude}*PI()/180-res_longitude*PI()/180)/2),2)))*1000)
            </when>
            <when test="gcjLng!=null and gcjLng!=''">
                order by
        		ISNULL(ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{gcjLat}*PI()/180-gcj_lat*PI()/180)/2),2)+COS(#{gcjLat}*PI()/180)*COS(gcj_lat*PI()/180)*POW(SIN((#{gcjLng}*PI()/180-gcj_lng*PI()/180)/2),2)))*1000)),
        		ROUND(6378.138*2*ASIN(SQRT(POW(SIN((#{gcjLat}*PI()/180-gcj_lat*PI()/180)/2),2)+COS(#{gcjLat}*PI()/180)*COS(gcj_lat*PI()/180)*POW(SIN((#{gcjLng}*PI()/180-gcj_lng*PI()/180)/2),2)))*1000)
        	</when>
		</choose>
	</select>
</mapper>