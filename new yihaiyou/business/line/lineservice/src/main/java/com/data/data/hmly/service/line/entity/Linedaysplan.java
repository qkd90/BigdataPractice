package com.data.data.hmly.service.line.entity;

// Generated 2015-10-22 10:47:22 by Hibernate Tools 3.4.0.CR1

import com.data.data.hmly.service.scenic.entity.ScenicInfo;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import java.util.Date;
import java.util.List;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Linedaysplan generated by hbm2java
 */
@Entity
@Table(name = "linedaysplan")
public class Linedaysplan extends com.framework.hibernate.util.Entity implements java.io.Serializable, Cloneable {

	private static final long serialVersionUID = 5566678345524151613L;
	private Long id;
	private Long lineId;
	private Linedays linedays;
	private Integer showOrder;
	private Long cityId;
	private String type;

	private String timeNode;
	private String timeDesc;

	private Long typeId;
	private String typeName;
	private Long userId;
	private Date createTime;
	private Long foodId;
	private transient ScenicInfo scenicInfo;

	private List<LineDaysPlanInfo> planInfoList;
	private List<LineImages> planInfoImagesList;

	public Linedaysplan() {
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "lineId")
	public Long getLineId() {
		return this.lineId;
	}

	public void setLineId(Long lineId) {
		this.lineId = lineId;
	}

	@ManyToOne
	@JoinColumn(name = "linedaysId")
	public Linedays getLinedays() {
		return linedays;
	}

	public void setLinedays(Linedays linedays) {
		this.linedays = linedays;
	}

	@Column(name = "showOrder")
	public Integer getShowOrder() {
		return this.showOrder;
	}

	public void setShowOrder(Integer showOrder) {
		this.showOrder = showOrder;
	}

	@Column(name = "cityId")
	public Long getCityId() {
		return this.cityId;
	}

	public void setCityId(Long cityId) {
		this.cityId = cityId;
	}

	@Column(name = "type", length = 10)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "typeId")
	public Long getTypeId() {
		return this.typeId;
	}

	public void setTypeId(Long typeId) {
		this.typeId = typeId;
	}

	@Column(name = "typeName", length = 500)
	public String getTypeName() {
		return this.typeName;
	}

	public void setTypeName(String typeName) {
		this.typeName = typeName;
	}

	@Column(name = "userId")
	public Long getUserId() {
		return this.userId;
	}

	public void setUserId(Long userId) {
		this.userId = userId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createTime", length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Column(name = "foodId")
	public Long getFoodId() {
		return foodId;
	}

	public void setFoodId(Long foodId) {
		this.foodId = foodId;
	}

	@Transient
	public ScenicInfo getScenicInfo() {
		return scenicInfo;
	}

	public void setScenicInfo(ScenicInfo scenicInfo) {
		this.scenicInfo = scenicInfo;
	}
	@Column(name = "timeNode")
	public String getTimeNode() {
		return timeNode;
	}

	public void setTimeNode(String timeNode) {
		this.timeNode = timeNode;
	}
	@Column(name = "timeDesc")
	public String getTimeDesc() {
		return timeDesc;
	}

	public void setTimeDesc(String timeDesc) {
		this.timeDesc = timeDesc;
	}

	@Transient
	public List<LineDaysPlanInfo> getPlanInfoList() {
		return planInfoList;
	}

	public void setPlanInfoList(List<LineDaysPlanInfo> planInfoList) {
		this.planInfoList = planInfoList;
	}

	@Transient
	public List<LineImages> getPlanInfoImagesList() {
		return planInfoImagesList;
	}

	public void setPlanInfoImagesList(List<LineImages> planInfoImagesList) {
		this.planInfoImagesList = planInfoImagesList;
	}

	@Override
	public Linedaysplan clone() throws CloneNotSupportedException {
		return (Linedaysplan) super.clone();
	}
}
