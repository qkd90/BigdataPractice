<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hmlyinfo.app.soutu.scenic.mapper.NoteCommentMapper">
    <insert id="insert" parameterType="NoteComment">
        insert into tb_note_comment
        (
        id,
        note_id,
        note_image_id,
        user_id,
        reply_to,
        content,
        modify_time,
        create_time
        )
        values
        (
        #{id},
        #{noteId},
        #{noteImageId},
        #{userId},
        #{replyTo},
        #{content},
        #{modifyTime},
        #{createTime}
        )
    </insert>

    <update id="update" parameterType="NoteComment">
        update tb_note_comment
        <set>
            <if test="noteId != null and '' != noteId"> note_id = #{noteId},</if>
            <if test="noteImageId != null and '' != noteImageId"> note_image_id = #{noteImageId},</if>
            <if test="userId != null and '' != userId"> user_id = #{userId},</if>
            <if test="replyTo != null and '' != replyTo"> reply_to = #{replyTo},</if>
            <if test="content != null and '' != content"> content = #{content},</if>
            <if test="modifyTime != null and '' != modifyTime"> modify_time = #{modifyTime},</if>
            <if test="createTime != null and '' != createTime"> create_time = #{createTime},</if>
        </set>
        where
        id = #{id}
    </update>

    <delete id="del" parameterType="NoteComment">
        delete from
        tb_note_comment
        where
        id = #{id}
    </delete>

    <select id="selById" resultType="Map">
        select
        comment.*,
        user.nickname,
        user.userface,
        image.address_small
        from
        tb_note_comment comment
        inner join tb_user user
        on comment.user_id=user.id
        left join tb_note_image image
        on image.id=comment.note_image_id
        where
        comment.id = #{id}
    </select>

    <select id="count" resultType="int">
        select
        count(*)
        <include refid="byProperty"/>
    </select>

    <select id="list" resultType="Map">
        select
        comment.*<if test="needUser != null" >,
        user.nickname,
        user.userface</if><if test="needPic != null">,
        image.address_small
        </if>
        <include refid="byProperty"/>
    </select>

    <sql id="byProperty">
        from
        tb_note_comment comment
        <if test="needUser != null" >
            inner join tb_user user
            on comment.user_id=user.id
        </if>
        <if test="needPic != null" >
            left join tb_note_image image
            on comment.note_image_id = image.id
        </if>
        <where>
            <if test="id != null and '' != id"> and comment.id = #{id} </if>
            <if test="noteId != null and '' != noteId"> and comment.note_id = #{noteId} </if>
            <if test="noteImageId != null and '' != noteImageId"> and note_image_id = #{noteImageId} </if>
            <if test="userId != null and '' != userId"> and comment.user_id = #{userId} </if>
            <if test="replyTo != null and '' != replyTo"> and reply_to = #{replyTo} </if>
            <if test="content != null and '' != content"> and content = #{content} </if>
            <if test="onlyMain != null"> and note_image_id is null </if>
            <if test="ids != null">
                and comment.id in ( <if test="ids.size() == 0">-1000</if>
                <foreach collection="ids" item="item" index="index" separator=",">#{item}
                </foreach>
                )
            </if>
        </where>
        <choose>
            <when test="orderColumn != null and '' != orderColumn">
                ORDER BY comment.${orderColumn}
                <if test="orderType != null and '' != orderType">
                    ${orderType}
                </if>
            </when>
            <otherwise>
                order by id DESC
            </otherwise>
        </choose>
    </sql>
</mapper>