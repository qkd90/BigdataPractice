<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hmlyinfo.app.soutu.hotel.mapper.HotelCommentMapper">
	<insert id="insert" parameterType="HotelComment" useGeneratedKeys="true" keyProperty="id">
		insert into tb_hotel_comment
			(
				id,
				nickname,
				user_id,
				hotel_id,
				index_id,
				score,
				content,
				create_time,
				modify_time
			)
		values
			(
				#{id},
				#{nickName},
				#{userId},
				#{hotelId},
				#{indexId},
				#{score},
				#{content},
				#{createTime},
				#{modifyTime}
			)	
	</insert>
	
	<update id="update" parameterType="HotelComment">
		update tb_hotel_comment
		<set>
			<if test="id != null and '' != id"> id = #{id},</if>
			<if test="nickName != null and '' != nickName"> nickname = #{nickName},</if>
			<if test="userId != null and '' != userId"> user_id = #{userId},</if>
			<if test="hotelId != null and '' != hotelId"> hotel_id = #{hotelId},</if>
			<if test="indexId != null and '' != indexId"> index_id = #{indexId},</if>
			<if test="score != null and '' != score"> score = #{score},</if>
			<if test="content != null and '' != content"> content = #{content},</if>
			<if test="createTime != null and '' != createTime"> create_time = #{createTime},</if>
			<if test="modifyTime != null and '' != modifyTime"> modify_time = #{modifyTime},</if>
		</set>
		where
			id = #{id}
	</update>
	
	<delete id="del" parameterType="HotelComment">
		delete from
			tb_hotel_comment
		where
			id = #{id}
	</delete>
	
	<select id="selById" resultType="HotelComment">
		select
			*
		from
			tb_hotel_comment
		where
			id = #{id}
	</select>
	
	<select id="count" resultType="int">
		select 
			count(*) 
		<include refid="byProperty"/>
	</select>
	
	<select id="list" resultType="map">
		select 
			*
		<include refid="byProperty"/>
	</select>
	
	<select id="listColumns" resultType="HotelComment">
		select
		<if test="needColumns!=null and needColumns.size()!=0">
			<foreach collection="needColumns" item="item" index="index" separator=",">${item}</foreach>
		</if>
		<include refid="byProperty"/>
	</select>
	
	<sql id="byProperty">
		from
			tb_hotel_comment
		<where>
			<if test="id != null and '' != id"> and id = #{id} </if>
			<if test="nickName != null and '' != nickName"> nickname = #{nickName},</if>
			<if test="userId != null and '' != userId"> and user_id = #{userId} </if>
			<if test="hotelId != null and '' != hotelId"> and hotel_id = #{hotelId} </if>
			<if test="indexId != null and '' != indexId"> and index_id = #{indexId} </if>
			<if test="score != null and '' != score"> and score = #{score} </if>
			<if test="content != null and '' != content"> and content = #{content} </if>
			<if test="createTime != null and '' != createTime"> and create_time = #{createTime} </if>
			<if test="modifyTime != null and '' != modifyTime"> and modify_time = #{modifyTime} </if>
			<if test="ta != null and '' != ta"> and unix_timestamp(create_time) * 1000 &gt; #{ta} </if>
            <if test="tb != null and '' != tb"> and unix_timestamp(create_time) * 1000 &lt; #{tb} </if>
            <if test="ids != null">
            	and id in (<if test="ids.size() == 0">-1</if>
                <foreach item="item" index="index" collection="ids"
                         separator=",">
                    #{item}
                </foreach>)
            </if>
		</where>
		<choose>
            <when test="orderColumn != null and '' != orderColumn">
                order by ${orderColumn}
                <if test="orderType != null and '' != orderType">
                    ${orderType}
                </if>
            </when>
			<otherwise>
				order by create_time desc
			</otherwise>
		</choose>
	</sql>
	
</mapper>